id,source,cveId,sourceId,publishDate,description,CVSS2_score,CVSS2_severity,CVSS3_score,CVSS3_severity
1126,OSSINDEX,,OWASP-Possible XML Injection-plexus-utils-1.5.6.jar,,"> `org.codehaus.plexus.util.xml.XmlWriterUtil#writeComment(XMLWriter, String, int, int, int)` does not check if the comment includes a ` --> ` sequence.  This means that text contained in the command string could be interpreted as XML, possibly leading to XML injection issues, depending on how this method is being called. >  > -- [github.com](https://github.com/codehaus-plexus/plexus-utils/issues/3)",,,,
1125,OSSINDEX,,OWASP-Directory traversal in org.codehaus.plexus.util.Expand-plexus-utils-1.5.6.jar,,"> org.codehaus.plexus.util.Expand does not guard against directory traversal, but such protection is generally expected from unarchiving tools. >  > -- [github.com](https://github.com/codehaus-plexus/plexus-utils/issues/4)",,,,
1190,NPM,,OWASP-1555-bl:1.2.2,,"A buffer over-read vulnerability exists in bl <4.0.3, <3.0.1 <2.2.1 and <1.2.3 which could allow an attacker to supply user input (even typed) that if it ends up in consume() argument and can become negative, the BufferList state can be corrupted, tricking it into exposing uninitialized memory via regular .slice() calls.",,,,
614,NPM,,OWASP-535-mime:1.6.0,,A comprehensive library for mime-type mapping : Affected versions of `mime` are vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input.,,,,
613,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-mime:1.2.4,,"A comprehensive library for mime-type mapping : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
567,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-mime:1.3.6,,"A comprehensive library for mime-type mapping : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
524,NPM,,OWASP-118-minimatch:3.0.4,,"a glob matcher in javascript : Affected versions of `minimatch` are vulnerable to regular expression denial of service attacks when user input is passed into the `pattern` argument of `minimatch(path, pattern)`.   ## Proof of Concept ``` var minimatch = require(“minimatch”);  // utility function for generating long strings var genstr = function (len, chr) {   var result = “”;   for (i=0; i<=len; i++) {     result = result + chr;   }   return result; }  var exploit = “[!” + genstr(1000000, “”) + “A”;  // minimatch exploit. console.log(“starting minimatch”); minimatch(“foo”, exploit); console.log(“finishing minimatch”); ```",,,,
774,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-minimatch:3.0.0,,"a glob matcher in javascript : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,,
773,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-minimatch:0.3.0,,"a glob matcher in javascript : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,,
523,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-minimatch:2.0.10,,"a glob matcher in javascript : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,,
522,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-minimatch:0.2.14,,"a glob matcher in javascript : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,,
757,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-is-my-json-valid:2.13.1,,"A JSONSchema validator that uses code generation to be extremely fast : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
756,NPM,,OWASP-572-is-my-json-valid:2.13.1,,A JSONSchema validator that uses code generation to be extremely fast : Version of `is-my-json-valid` before 1.4.1 or 2.17.2 are vulnerable to regular expression denial of service (ReDoS) via the email validation function.,,,,
1207,NPM,,OWASP-1556-node-fetch:1.7.3,,"A light-weight module that brings window.fetch to node.js and io.js : Node Fetch did not honor the size option after following a redirect, which means that when a content size was over the limit, a FetchError would never get thrown and the process would end without failure.  For most people, this fix will have a little or no impact. However, if you are relying on node-fetch to gate files above a size, the impact could be significant, for example: If you don't double-check the size of the data after fetch() has completed, your JS thread could get tied up doing work on a large file (DoS) and/or cost you money in computing.",,,,
538,OSSINDEX,,OWASP-Prototype override protection bypass-qs:5.2.0,,"A querystring parser that supports nesting and arrays, with a depth limit : A prototype override protection bypass is possible, which allows attackers to overwrite properties and functions. A previous solution for the problem is incomplete.",,,,
536,OSSINDEX,,OWASP-Prototype override protection bypass-qs:2.2.5,,"A querystring parser that supports nesting and arrays, with a depth limit : A prototype override protection bypass is possible, which allows attackers to overwrite properties and functions. A previous solution for the problem is incomplete.",,,,
568,OSSINDEX,,OWASP-Prototype override protection bypass-qs:6.2.3,,"A querystring parser that supports nesting and arrays, with a depth limit : A prototype override protection bypass is possible, which allows attackers to overwrite properties and functions. A previous solution for the problem is incomplete.",,,,
787,OSSINDEX,,OWASP-Prototype override protection bypass-qs:2.3.3,,"A querystring parser that supports nesting and arrays, with a depth limit : A prototype override protection bypass is possible, which allows attackers to overwrite properties and functions. A previous solution for the problem is incomplete.",,,,
788,NPM,,OWASP-1469-qs:6.5.2,,"A querystring parser that supports nesting and arrays, with a depth limit : Affected version of `qs` are vulnerable to Prototype Pollution because it is possible to bypass the protection. The `qs.parse` function fails to properly prevent an object's prototype to be altered when parsing arbitrary input. Input containing `[` or `]` may bypass the prototype pollution protection and alter the Object prototype. This allows attackers to override properties that will exist in all objects, which may lead to Denial of Service or Remote Code Execution in specific circumstances.",,,,
534,NPM,,OWASP-1469-qs:2.2.5,,"A querystring parser that supports nesting and arrays, with a depth limit : Affected version of `qs` are vulnerable to Prototype Pollution because it is possible to bypass the protection. The `qs.parse` function fails to properly prevent an object's prototype to be altered when parsing arbitrary input. Input containing `[` or `]` may bypass the prototype pollution protection and alter the Object prototype. This allows attackers to override properties that will exist in all objects, which may lead to Denial of Service or Remote Code Execution in specific circumstances.",,,,
537,OSSINDEX,,OWASP-CWE-20: Improper Input Validation-qs:5.2.0,,"A querystring parser that supports nesting and arrays, with a depth limit : The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.",,,8.2,HIGH
786,OSSINDEX,,OWASP-CWE-20: Improper Input Validation-qs:2.3.3,,"A querystring parser that supports nesting and arrays, with a depth limit : The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.",,,8.2,HIGH
535,OSSINDEX,,OWASP-CWE-20: Improper Input Validation-qs:2.2.5,,"A querystring parser that supports nesting and arrays, with a depth limit : The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.",,,8.2,HIGH
518,OSSINDEX,,OWASP-CWE-506: Embedded Malicious Code-lodash:2.4.2,,"A utility library delivering consistency, customization, performance, & extras. : The application contains code that appears to be malicious in nature.",,,9.6,CRITICAL
519,OSSINDEX,,OWASP-CWE-770: Allocation of Resources Without Limits or Throttling-lodash:2.4.2,,"A utility library delivering consistency, customization, performance, & extras. : The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy for that actor.",,,7.4,HIGH
514,NPM,,OWASP-1065-lodash:2.4.2,,"A utility library delivering consistency, customization, performance, & extras. : Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.",,,,
516,NPM,,OWASP-577-lodash:2.4.2,,"A utility library delivering consistency, customization, performance, & extras. : Versions of `lodash` before 4.17.5 are vulnerable to prototype pollution.   The vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `__proto__` causing the addition or modification of an existing property that will exist on all objects.",,,,
517,NPM,,OWASP-782-lodash:2.4.2,,"A utility library delivering consistency, customization, performance, & extras. : Versions of `lodash` before 4.17.5 are vulnerable to prototype pollution.   The vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.",,,,
515,NPM,,OWASP-1523-lodash:2.4.2,,"A utility library delivering consistency, customization, performance, & extras. : Versions of `lodash` prior to 4.17.19 are vulnerable to Prototype Pollution.  The function `zipObjectDeep` allows a malicious user to modify the prototype of `Object` if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.    This vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.",,,,
512,OSSINDEX,,OWASP-CWE-506: Embedded Malicious Code-lodash:1.0.2,,"A utility library delivering consistency, customization, performance, and extras. : The application contains code that appears to be malicious in nature.",,,9.6,CRITICAL
513,OSSINDEX,,OWASP-CWE-770: Allocation of Resources Without Limits or Throttling-lodash:1.0.2,,"A utility library delivering consistency, customization, performance, and extras. : The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy for that actor.",,,7.4,HIGH
590,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-clean-css:3.4.28,,"A well-tested CSS minifier : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,3.7,LOW
589,NPM,,OWASP-785-clean-css:3.4.28,,A well-tested CSS minifier : Version of `clean-css` prior to 4.1.11 are vulnerable to Regular Expression Denial of Service (ReDoS). Untrusted input may cause catastrophic backtracking while matching regular expressions. This can cause the application to be unresponsive leading to Denial of Service.,,,,
737,OSSINDEX,,OWASP-CWE-62: UNIX Hard Link-fstream:1.0.11,,"Advanced file system stream things : The software, when opening a file or directory, does not sufficiently account for when the name is associated with a hard link to a target that is outside of the intended control sphere. This could allow an attacker to cause the software to operate on unauthorized files.",,,7.5,HIGH
736,NPM,,OWASP-886-fstream:1.0.11,,Advanced file system stream things : Versions of `fstream` prior to 1.0.12 are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file. The `fstream.DirWriter()` function is vulnerable.,,,,
1191,NPM,,OWASP-534-debug:2.2.0,,"Affected versions of `debug` are vulnerable to regular expression denial of service when untrusted user input is passed into the `o` formatter.   As it takes 50,000 characters to block the event loop for 2 seconds, this issue is a low severity issue.",,,,
1165,NPM,,OWASP-99-engine.io-client:1.5.4,,"Affected versions of `engine.io-client` do not verify certificates by default, and as such may be vulnerable to Man-in-the-Middle attacks.  The vulnerability is related to the way that node.js handles the `rejectUnauthorized` setting. If the value is something that evaluates to false, such as undefined or null, certificate verification will be disabled.",,,,
1192,NPM,,OWASP-146-growl:1.9.2,,"Affected versions of `growl` do not properly sanitize input prior to passing it into a shell command, allowing for arbitrary command execution.",,,,
1196,NPM,,OWASP-535-mime:1.3.6,,Affected versions of `mime` are vulnerable to regular expression denial of service when a mime lookup is performed on untrusted user input.,,,,
1197,NPM,,OWASP-118-minimatch:2.0.10,,"Affected versions of `minimatch` are vulnerable to regular expression denial of service attacks when user input is passed into the `pattern` argument of `minimatch(path, pattern)`.   ## Proof of Concept ``` var minimatch = require(“minimatch”);  // utility function for generating long strings var genstr = function (len, chr) {   var result = “”;   for (i=0; i<=len; i++) {     result = result + chr;   }   return result; }  var exploit = “[!” + genstr(1000000, “”) + “A”;  // minimatch exploit. console.log(“starting minimatch”); minimatch(“foo”, exploit); console.log(“finishing minimatch”); ```",,,,
1198,NPM,,OWASP-528-parsejson:0.0.3,,Affected versions of `parsejson` are vulnerable to a regular expression denial of service when parsing untrusted user input.,,,,
1166,NPM,,OWASP-528-parsejson:0.0.1,,Affected versions of `parsejson` are vulnerable to a regular expression denial of service when parsing untrusted user input.,,,,
1201,NPM,,OWASP-117-shell-quote:1.4.3,,"Affected versions of `shell-quote` do not properly escape command line arguments, which may result in command injection if the library is used to escape user input destined for use as command line arguments.    ## Proof of Concept:  The following characters are not escaped properly: `>`,`;`,`{`,`}`  Bash has a neat but not well known feature known as  Bash Brace Expansion , wherein a sub-command can be executed without spaces by running it between a set of `{}` and using the `,` instead of ` ` to seperate arguments. Because of this, full command injection is possible even though it was initially thought to be impossible.   ```    const quote = require('shell-quote').quote;    console.log(quote(['a;{echo,test,123,234}']));    // Actual                     a;{echo,test,123,234}     // Expected                   a;{echo,test,123,234}     // Functional Equivalent      a; echo 'test' '123' '1234'  ```",,,,
551,NPM,,OWASP-786-braces:2.3.2,,"Bash-like brace expansion, implemented in JavaScript. Safer than other brace expansion libs, with complete support for the Bash 4.3 braces specification, without sacrificing speed. : Versions of `braces` prior to 2.3.1 are vulnerable to Regular Expression Denial of Service (ReDoS). Untrusted input may cause catastrophic backtracking while matching regular expressions. This can cause the application to be unresponsive leading to Denial of Service.",,,,
716,NPM,,OWASP-338-brace-expansion:1.1.11,,"Brace expansion as known from sh/bash : Affected versions of `brace-expansion` are vulnerable to a regular expression denial of service condition.  ## Proof of Concept  ``` var expand = require('brace-expansion'); expand('{,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,n}'); ```",,,,
718,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-brace-expansion:1.1.3,,"Brace expansion as known from sh/bash : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,6.2,MEDIUM
717,OSSINDEX,,OWASP-CWE-185: Incorrect Regular Expression-brace-expansion:1.1.3,,Brace expansion as known from sh/bash : The software specifies a regular expression in a way that causes data to be improperly matched or compared.,,,7.5,HIGH
603,OSSINDEX,,OWASP-CWE-300: Channel Accessible by Non-Endpoint ('Man-in-the-Middle')-engine.io-client:1.5.4,,"Client for the realtime Engine : The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.",,,6.8,MEDIUM
792,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-set-value:2.0.0,,"Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths. : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
791,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-set-value:0.4.3,,"Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths. : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
790,NPM,,OWASP-1012-set-value:0.4.3,,"Create nested values and any intermediaries using dot notation (`'a.b.c'`) paths. : Versions of `set-value` prior to 3.0.1 or 2.0.1 are vulnerable to Prototype Pollution. The `set` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.",,,,
779,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-mixin-deep:1.3.1,,"Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone. : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
778,NPM,,OWASP-1013-mixin-deep:1.3.1,,"Deeply mix the properties of objects into the first object. Like merge-deep, but doesn't clone. : Versions of `mixin-deep` prior to 2.0.1 or 1.3.2 are vulnerable to Prototype Pollution. The `mixinDeep` function fails to validate which Object properties it updates. This allows attackers to modify the prototype of Object, causing the addition or modification of an existing property on all objects.",,,,
428,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-handlebars-1.3.1.jar: handlebars-1.0.0.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
1149,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-uicommons-omod-1.4.jar: handlebars.min.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
432,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-handlebars-1.3.1.jar: handlebars-v1.3.0.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
468,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-webservices.rest-omod-2.13.jar: handlebars-2.0.0.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
397,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-uicommons-omod-1.4.jar: handlebars.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
692,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-handlebars.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
1102,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-uicommons-omod-2.1.jar: handlebars.min.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
1099,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-uicommons-omod-2.1.jar: handlebars.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
695,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-handlebars.min.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
657,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-uicommons-omod-2.12.0.jar: handlebars.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
401,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-webservices.rest-omod-2.17.jar: handlebars-2.0.0.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
660,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-uicommons-omod-2.12.0.jar: handlebars.min.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
358,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-handlebars-1.1.2.jar: handlebars-1.0.0.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
1128,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-handlebars-2.0.0.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
458,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-uicommons-omod-2.4.0.jar: handlebars.min.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
455,RETIREJS,,OWASP-Disallow calling helperMissing and blockHelperMissing directly-uicommons-omod-2.4.0.jar: handlebars.js,,Disallow calling helperMissing and blockHelperMissing directly,,,,
687,RETIREJS,,OWASP-DOS in $sanitize-angular-sanitize.min.js,,DOS in $sanitize,,,,
642,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-2.12.0.jar: angular-sanitize.min.js,,DOS in $sanitize,,,,
544,RETIREJS,,OWASP-DOS in $sanitize-app.js,,DOS in $sanitize,,,,
450,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-2.4.0.jar: angular.min.js,,DOS in $sanitize,,,,
1079,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-2.1.jar: angular-resource.min.js,,DOS in $sanitize,,,,
652,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-2.12.0.jar: angular.min.js,,DOS in $sanitize,,,,
445,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-2.4.0.jar: angular.js,,DOS in $sanitize,,,,
485,RETIREJS,,OWASP-DOS in $sanitize-angular.js,,DOS in $sanitize,,,,
1137,RETIREJS,,OWASP-DOS in $sanitize-angular-1.4.5.min.js,,DOS in $sanitize,,,,
480,RETIREJS,,OWASP-DOS in $sanitize-angular-route.min.js,,DOS in $sanitize,,,,
377,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-1.4.jar: angular-resource.min.js,,DOS in $sanitize,,,,
440,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-2.4.0.jar: angular-sanitize.min.js,,DOS in $sanitize,,,,
387,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-1.4.jar: angular.js,,DOS in $sanitize,,,,
528,RETIREJS,,OWASP-DOS in $sanitize-openmrs-contrib-uicommons.bundle.min.js,,DOS in $sanitize,,,,
1094,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-2.1.jar: angular.min.js,,DOS in $sanitize,,,,
392,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-1.4.jar: angular.min.js,,DOS in $sanitize,,,,
647,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-2.12.0.jar: angular.js,,DOS in $sanitize,,,,
475,RETIREJS,,OWASP-DOS in $sanitize-angular-resource.min.js,,DOS in $sanitize,,,,
1084,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-2.1.jar: angular-sanitize.min.js,,DOS in $sanitize,,,,
1089,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-2.1.jar: angular.js,,DOS in $sanitize,,,,
637,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-2.12.0.jar: angular-resource.min.js,,DOS in $sanitize,,,,
382,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-1.4.jar: angular-sanitize.min.js,,DOS in $sanitize,,,,
681,RETIREJS,,OWASP-DOS in $sanitize-metadatamapping-owa-1.3.4.jar: vendor.bundle.js,,DOS in $sanitize,,,,
435,RETIREJS,,OWASP-DOS in $sanitize-uicommons-omod-2.4.0.jar: angular-resource.min.js,,DOS in $sanitize,,,,
490,RETIREJS,,OWASP-DOS in $sanitize-angular.min.js,,DOS in $sanitize,,,,
584,RETIREJS,,OWASP-DOS in $sanitize-app.min.js,,DOS in $sanitize,,,,
734,NPM,,OWASP-1547-elliptic:6.4.1,,"EC cryptography : The Elliptic package before version 6.5.3 for Node.js allows ECDSA signature malleability via variations in encoding, leading '0' bytes, or integer overflows. This could conceivably have a security-relevant impact if an application relied on a single canonical signature.",,,,
735,OSSINDEX,,OWASP-CWE-190: Integer Overflow or Wraparound-elliptic:6.4.1,,"EC cryptography : The software performs a calculation that can produce an integer overflow or wraparound, when the logic assumes that the resulting value will always be larger than the original value. This can introduce other weaknesses when the calculation is used for resource management or execution control.",,,5.6,MEDIUM
711,NPM,,OWASP-1488-acorn:5.7.3,,"ECMAScript parser : Affected versions of `acorn` are vulnerable to Regular Expression Denial of Service. A regex in the form of `/[x-ud800]/u` causes the parser to enter an infinite loop. The string is not valid UTF16 which usually results in it being sanitized before reaching the parser. If an application processes untrusted input and passes it directly to `acorn`, attackers may leverage the vulnerability leading to Denial of Service.",,,,
708,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-acorn:2.7.0,,"ECMAScript parser : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
709,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-acorn:3.0.4,,"ECMAScript parser : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
710,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-acorn:4.0.13,,"ECMAScript parser : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
712,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-acorn:5.7.3,,"ECMAScript parser : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
543,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-acorn:3.3.0,,"ECMAScript parser : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
578,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-acorn:2.6.4,,"ECMAScript parser : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
733,OSSINDEX,,OWASP-CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')-decompress:3.0.0,,"Extracting archives made easy : The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",,,7.5,HIGH
732,NPM,,OWASP-1217-decompress:3.0.0,,"Extracting archives made easy : Versions of `decompress` prior to 4.2.1 are vulnerable to Arbitrary File Write. The package fails to prevent extraction of files with relative paths, allowing attackers to write to any folder in the system by including filenames containing`../`.",,,,
502,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-braces:1.8.5,,"Fastest brace expansion for node.js, with the most complete support for the Bash 4.3 braces specification. : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
501,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-braces:0.1.5,,"Fastest brace expansion lib. Typically used with file paths, but can be used with any string. Expands comma-separated values (e.g. `foo/{a,b,c}/bar`) and alphabetical or numerical ranges (e.g. `{1..9}`) : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
500,NPM,,OWASP-786-braces:0.1.5,,"Fastest brace expansion lib. Typically used with file paths, but can be used with any string. Expands comma-separated values (e.g. `foo/{a,b,c}/bar`) and alphabetical or numerical ranges (e.g. `{1..9}`) : Versions of `braces` prior to 2.3.1 are vulnerable to Regular Expression Denial of Service (ReDoS). Untrusted input may cause catastrophic backtracking while matching regular expressions. This can cause the application to be unresponsive leading to Denial of Service.",,,,
686,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-webservices.rest-omod-2.13.jar: jackson-databind-2.5.4.jar,,"General data-binding functionality for Jackson: works on core streaming API : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
801,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-webservices.rest-omod-2.17.jar: jackson-databind-2.5.4.jar,,"General data-binding functionality for Jackson: works on core streaming API : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
362,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-jackson-databind-2.5.4.jar,,"General data-binding functionality for Jackson: works on core streaming API : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
1116,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-jackson-databind-2.2.3.jar,,"General data-binding functionality for Jackson: works on core streaming API : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
729,OSSINDEX,,OWASP-CWE-330: Use of Insufficiently Random Values-cryptiles:0.2.2,,General purpose crypto utilities : The software may use insufficiently random numbers or values in a security context that depends on unpredictable numbers.,,,5.9,MEDIUM
730,OSSINDEX,,OWASP-CWE-331: Insufficient Entropy-cryptiles:0.2.2,,"General purpose crypto utilities : The software uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.",,,9.8,CRITICAL
727,NPM,,OWASP-1464-cryptiles:0.2.2,,General purpose crypto utilities : Versions of `cryptiles` prior to 4.1.2 are vulnerable to Insufficient Entropy. The `randomDigits()` method does not provide sufficient entropy and its generates digits that are not evenly distributed.,,,,
753,NPM,,OWASP-566-hoek:0.9.1,,"General purpose node utilities : Versions of `hoek` prior to 4.2.1 and 5.0.3 are vulnerable to prototype pollution.  The `merge` function, and the `applyToDefaults` and `applyToDefaultsWithShallow` functions which leverage `merge` behind the scenes, are vulnerable to a prototype pollution attack when provided an _unvalidated_ payload created from a JSON string containing the `__proto__` property.  This can be demonstrated like so:  ```javascript var Hoek = require('hoek'); var malicious_payload = '{ __proto__ :{ oops : It works ! }}';  var a = {}; console.log( Before :   + a.oops); Hoek.merge({}, JSON.parse(malicious_payload)); console.log( After :   + a.oops); ```  This type of attack can be used to overwrite existing properties causing a potential denial of service.",,,,
768,OSSINDEX,,OWASP-CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')-kind-of:6.0.2,,"Get the native type of a value. : The software constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",,,5.3,MEDIUM
767,NPM,,OWASP-1490-kind-of:6.0.2,,"Get the native type of a value. : Versions of `kind-of` 6.x prior to 6.0.3 are vulnerable to a Validation Bypass. A maliciously crafted object can alter the result of the type check, allowing attackers to bypass the type checking validation.",,,,
739,OSSINDEX,,OWASP-CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')-gm:1.4.2,,"Graphics Magick for node. : The software constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",,,6.5,MEDIUM
738,NPM,,OWASP-54-gm:1.4.2,,"Graphics Magick for node. : Versions of `gm` prior to 1.21.1 are affected by a command injection vulnerability. The vulnerability is triggered when user input is passed into `gm.compare()`, which fails to sanitize input correctly before calling the graphics magic binary.",,,,
740,OSSINDEX,,OWASP-CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')-growl:1.9.2,,"Growl unobtrusive notifications : The software constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",,,8.8,HIGH
742,NPM,,OWASP-1300-handlebars:4.1.0,,Handlebars provides the power necessary to let you build semantic templates effectively with no frustration : Affected versions of `handlebars` are vulnerable to Denial of Service. The package's parser may be forced into an endless loop while processing specially-crafted templates. This may allow attackers to exhaust system resources leading to Denial of Service.,,,,
747,OSSINDEX,,OWASP-CWE-20: Improper Input Validation-handlebars:4.1.0,,Handlebars provides the power necessary to let you build semantic templates effectively with no frustration : The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.,,,8.2,HIGH
750,OSSINDEX,,OWASP-CWE-94: Improper Control of Generation of Code ('Code Injection')-handlebars:4.1.0,,"Handlebars provides the power necessary to let you build semantic templates effectively with no frustration : The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",,,8.8,HIGH
749,OSSINDEX,,OWASP-CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')-handlebars:4.1.0,,"Handlebars provides the power necessary to let you build semantic templates effectively with no frustration : The software constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",,,5.3,MEDIUM
748,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-handlebars:4.1.0,,"Handlebars provides the power necessary to let you build semantic templates effectively with no frustration : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
741,NPM,,OWASP-1164-handlebars:4.1.0,,"Handlebars provides the power necessary to let you build semantic templates effectively with no frustration : Versions of `handlebars` prior to 3.0.8 or 4.3.0 are vulnerable to Prototype Pollution leading to Remote Code Execution. Templates may alter an Objects' `__proto__` and `__defineGetter__` properties, which may allow an attacker to execute arbitrary code through crafted payloads.",,,,
743,NPM,,OWASP-1316-handlebars:4.1.0,,"Handlebars provides the power necessary to let you build semantic templates effectively with no frustration : Versions of `handlebars` prior to 3.0.8 or 4.5.2 are vulnerable to Arbitrary Code Execution. The package's lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It can be used to run arbitrary code in a server processing Handlebars templates or on a victim's browser (effectively serving as Cross-Site Scripting).  The following template can be used to demonstrate the vulnerability:   ```{{#with  constructor }} 	{{#with split as |a|}} 		{{pop (push  alert('Vulnerable Handlebars JS'); )}} 		{{#with (concat (lookup join (slice 0 1)))}} 			{{#each (slice 2 3)}} 				{{#with (apply 0 a)}} 					{{.}} 				{{/with}} 			{{/each}} 		{{/with}} 	{{/with}} {{/with}}```",,,,
744,NPM,,OWASP-1324-handlebars:4.1.0,,"Handlebars provides the power necessary to let you build semantic templates effectively with no frustration : Versions of `handlebars` prior to 3.0.8 or 4.5.3 are vulnerable to Arbitrary Code Execution. The package's lookup helper fails to properly validate templates, allowing attackers to submit templates that execute arbitrary JavaScript in the system. It is due to an incomplete fix for a [previous issue](https://www.npmjs.com/advisories/1316). This vulnerability can be used to run arbitrary code in a server processing Handlebars templates or on a victim's browser (effectively serving as Cross-Site Scripting).",,,,
745,NPM,,OWASP-1325-handlebars:4.1.0,,Handlebars provides the power necessary to let you build semantic templates effectively with no frustration : Versions of `handlebars` prior to 3.0.8 or 4.5.3 are vulnerable to prototype pollution. It is possible to add or modify properties to the Object prototype through a malicious template. This may allow attackers to crash the application or execute Arbitrary Code in specific conditions.,,,,
746,NPM,,OWASP-755-handlebars:4.1.0,,"Handlebars provides the power necessary to let you build semantic templates effectively with no frustration : Versions of `handlebars` prior to 4.0.14 are vulnerable to Prototype Pollution. Templates may alter an Objects' prototype, thus allowing an attacker to execute arbitrary code on the server.",,,,
785,OSSINDEX,,OWASP-CWE-300: Channel Accessible by Non-Endpoint ('Man-in-the-Middle')-phantomjs-prebuilt:2.1.16,,"Headless WebKit with JS API : The product does not adequately verify the identity of actors at both ends of a communication channel, or does not adequately ensure the integrity of the channel, in a way that allows the channel to be accessed or influenced by an actor that is not an endpoint.",,,7.4,HIGH
595,OSSINDEX,,OWASP-Denial of Service (DoS)-connect:1.9.2,,"High performance middleware framework : > When using the static middleware, if the URL contains a valid file name and a trailing backslash the node server will crash with `Error: ENOENT, no such file or directory`. >  > -- [github.com](https://github.com/senchalabs/connect/issues/452)",,,,
591,NPM,,OWASP-3-connect:1.9.2,,"High performance middleware framework : Connect is a stack of middleware that is executed in order in each request.  The  methodOverride  middleware allows the http post to override the method of the request with the value of the  _method  post key or with the header  x-http-method-override .  Because the user post input was not checked, req.method could contain any kind of value. Because the req.method did not match any common method VERB, connect answered with a 404 page containing the  Cannot `[method]` `[url]`  content. The method was not properly encoded for output in the browser.   ###Example: ``` ~ curl  localhost:3000  -d  _method=<script src=http://nodesecurity.io/xss.js></script>  Cannot <SCRIPT SRC=HTTP://NODESECURITY.IO/XSS.JS></SCRIPT> / ```",,,,
593,OSSINDEX,,OWASP-CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')-connect:1.9.2,,"High performance middleware framework : The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.",,,5.8,MEDIUM
594,OSSINDEX,,OWASP-Cross-Site Scripting with connect.methodOverride()-connect:1.9.2,,"High performance middleware framework : This middleware overwrite req.method with the req.body['_method'] value. When you don't catch the error it responds with a default error msg:  Cannot [METHOD] [URL]  (https://github.com/senchalabs/connect/blob/6db901f967036ccc3c892b4bcb5bcb59e0b0dca9/lib/proto.js#L155). Because this is not enough sanitized, you can force a Cross-Site Scripting in the response:  ~ curl  localhost:3000  -d  _method=<script src=http://martes13.net/a.js></script>  Cannot <SCRIPT SRC=HTTP://MARTES13.NET/A.JS></SCRIPT> / This is very dangerous because in a server like ExpressJS it won't be handled with a app.all('/*', ...), so all servers using this middleware are vulnerable.",,,6.5,MEDIUM
497,OSSINDEX,,OWASP-Cross Site Scripting (XSS) in JSONP-angular:1.5.5,,"HTML enhanced for web apps : JSONP allows untrusted resource URLs, which provides a vector for attack by malicious actors.",,,,
583,OSSINDEX,,OWASP-Cross Site Scripting (XSS) in JSONP-angular:1.5.3,,"HTML enhanced for web apps : JSONP allows untrusted resource URLs, which provides a vector for attack by malicious actors.",,,,
495,OSSINDEX,,OWASP-CWE-20: Improper Input Validation-angular:1.5.5,,HTML enhanced for web apps : The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.,,,8.2,HIGH
581,OSSINDEX,,OWASP-CWE-20: Improper Input Validation-angular:1.5.3,,HTML enhanced for web apps : The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.,,,8.2,HIGH
714,OSSINDEX,,OWASP-CWE-20: Improper Input Validation-angular:1.6.1,,HTML enhanced for web apps : The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.,,,8.2,HIGH
496,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-angular:1.5.5,,HTML enhanced for web apps : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
582,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-angular:1.5.3,,HTML enhanced for web apps : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
715,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-angular:1.6.1,,HTML enhanced for web apps : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
498,NPM,,OWASP-1343-angular:1.8.0,,"HTML enhanced for web apps : Versions of `angular ` prior to 1.7.9 are vulnerable to prototype pollution. The deprecated API function `merge()` does not restrict the modification of an Object's prototype in the , which may allow an attacker to add or modify an existing property that will exist on all objects.",,,,
580,NPM,,OWASP-1343-angular:1.5.3,,"HTML enhanced for web apps : Versions of `angular ` prior to 1.7.9 are vulnerable to prototype pollution. The deprecated API function `merge()` does not restrict the modification of an Object's prototype in the , which may allow an attacker to add or modify an existing property that will exist on all objects.",,,,
713,NPM,,OWASP-1343-angular:1.6.1,,"HTML enhanced for web apps : Versions of `angular ` prior to 1.7.9 are vulnerable to prototype pollution. The deprecated API function `merge()` does not restrict the modification of an Object's prototype in the , which may allow an attacker to add or modify an existing property that will exist on all objects.",,,,
752,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-hawk:1.1.1,,"HTTP Hawk Authentication Scheme : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
751,NPM,,OWASP-77-hawk:1.1.1,,"HTTP Hawk Authentication Scheme : Versions of `hawk` prior to 3.1.3, or 4.x prior to 4.1.1 are affected by a regular expression denial of service vulnerability related to excessively long headers and URI's.",,,,
797,OSSINDEX,,OWASP-CWE-20: Improper Input Validation-tunnel-agent:0.4.3,,"HTTP proxy tunneling agent. Formerly part of mikeal/request, now a standalone module. : The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.",,,8.2,HIGH
798,NPM,,OWASP-598-tunnel-agent:0.6.0,,"HTTP proxy tunneling agent. Formerly part of mikeal/request, now a standalone module. : Versions of `tunnel-agent` before 0.6.0 are vulnerable to memory exposure.  This is exploitable if user supplied input is provided to the auth value and is a number.  Proof-of-concept: ```js require('request')({   method: 'GET',   uri: 'http://www.example.com',   tunnel: true,   proxy:{     protocol: 'http:',     host:'127.0.0.1',     port:8080,     auth:USERSUPPLIEDINPUT // number   } }); ```",,,,
755,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-http-proxy:1.17.0,,"HTTP proxying for the masses : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
754,NPM,,OWASP-1486-http-proxy:1.17.0,,"HTTP proxying for the masses : Versions of `http-proxy` prior to 1.18.1 are vulnerable to Denial of Service. An HTTP request with a long body triggers an `ERR_HTTP_HEADERS_SENT` unhandled exception that crashes the proxy server. This is only possible when the proxy server sets headers in the proxy request using the `proxyReq.setHeader` function.     For a proxy server running on `http://localhost:3000`, the following curl request triggers the unhandled exception:   ```curl -XPOST http://localhost:3000 -d  $(python -c 'print( x *1025)') ```",,,,
760,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-jquery:3.2.1,,JavaScript library for DOM operations : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
759,NPM,,OWASP-796-jquery:3.2.1,,JavaScript library for DOM operations : Versions of `jquery`  prior to 3.4.0 are vulnerable to Prototype Pollution. The extend() method allows an attacker to modify the prototype for `Object` causing changes in properties that will exist on all objects.,,,,
758,NPM,,OWASP-1518-jquery:3.2.1,,"JavaScript library for DOM operations : Versions of `jquery` prior to 3.5.0 are vulnerable to Cross-Site Scripting. Passing HTML from untrusted sources - even after sanitizing it - to one of jQuery's DOM manipulation methods (i.e. .html(), .append(), and others) may execute arbitrary JavaScript in a victim's browser.",,,,
769,OSSINDEX,,OWASP-CWE-506: Embedded Malicious Code-lodash:4.17.11,,Lodash modular utilities. : The application contains code that appears to be malicious in nature.,,,9.6,CRITICAL
771,OSSINDEX,,OWASP-CWE-506: Embedded Malicious Code-lodash:4.6.1,,Lodash modular utilities. : The application contains code that appears to be malicious in nature.,,,9.6,CRITICAL
772,OSSINDEX,,OWASP-CWE-770: Allocation of Resources Without Limits or Throttling-lodash:4.6.1,,"Lodash modular utilities. : The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy for that actor.",,,7.4,HIGH
770,OSSINDEX,,OWASP-CWE-770: Allocation of Resources Without Limits or Throttling-lodash:4.17.11,,"Lodash modular utilities. : The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy for that actor.",,,7.4,HIGH
563,NPM,,OWASP-1065-lodash:4.17.20,,Lodash modular utilities. : Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.,,,,
565,NPM,,OWASP-577-lodash:4.17.20,,"Lodash modular utilities. : Versions of `lodash` before 4.17.5 are vulnerable to prototype pollution.   The vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `__proto__` causing the addition or modification of an existing property that will exist on all objects.",,,,
566,NPM,,OWASP-782-lodash:4.17.20,,"Lodash modular utilities. : Versions of `lodash` before 4.17.5 are vulnerable to prototype pollution.   The vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.",,,,
564,NPM,,OWASP-1523-lodash:4.17.20,,Lodash modular utilities. : Versions of `lodash` prior to 4.17.19 are vulnerable to Prototype Pollution.  The function `zipObjectDeep` allows a malicious user to modify the prototype of `Object` if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.    This vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.,,,,
357,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-handlebars-1.1.2.jar,,Logic-less and semantic templates with Java : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
533,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-parsejson:0.0.3,,"Method that parses a JSON string and returns a JSON object : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
617,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-parsejson:0.0.1,,"Method that parses a JSON string and returns a JSON object : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
632,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-coreapps-omod-1.11.1.jar,,OMOD project for CoreApps : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
1109,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-legacyui-omod-1.1.jar,,OMOD project for LegacyUI : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
1127,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-legacyui-omod-1.0.jar,,OMOD project for LegacyUI : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
636,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-legacyui-omod-1.2.3.jar,,OMOD project for LegacyUI : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
671,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-legacyui-omod-0.2.jar,,OMOD project for LegacyUI : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
670,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-legacyui-omod-0.1.jar,,OMOD project for LegacyUI : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
1078,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-uicommons-omod-2.1.jar,,OMOD project for uicommons : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
376,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-uicommons-omod-1.4.jar,,OMOD project for uicommons : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
525,NPM,,OWASP-1179-minimist:0.0.10,,"parse argument options : Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.   Parsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.   This is exploitable if attackers have control over the arguments being passed to `minimist`.",,,,
776,NPM,,OWASP-1179-minimist:1.2.0,,"parse argument options : Affected versions of `minimist` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.   Parsing the argument `--__proto__.y=Polluted` adds a `y` property with value `Polluted` to all objects. The argument `--__proto__=Polluted` raises and uncaught error and crashes the application.   This is exploitable if attackers have control over the arguments being passed to `minimist`.",,,,
527,OSSINDEX,,OWASP-CWE-94: Improper Control of Generation of Code ('Code Injection')-minimist:0.2.1,,"parse argument options : The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",,,8.8,HIGH
526,OSSINDEX,,OWASP-CWE-94: Improper Control of Generation of Code ('Code Injection')-minimist:0.0.10,,"parse argument options : The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",,,8.8,HIGH
775,OSSINDEX,,OWASP-CWE-94: Improper Control of Generation of Code ('Code Injection')-minimist:0.0.8,,"parse argument options : The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",,,8.8,HIGH
777,OSSINDEX,,OWASP-CWE-94: Improper Control of Generation of Code ('Code Injection')-minimist:1.2.0,,"parse argument options : The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",,,8.8,HIGH
431,RETIREJS,,OWASP-poorly sanitized input passed to eval()-handlebars-1.3.1.jar: handlebars-1.0.0.js,,poorly sanitized input passed to eval(),,,,
361,RETIREJS,,OWASP-poorly sanitized input passed to eval()-handlebars-1.1.2.jar: handlebars-1.0.0.js,,poorly sanitized input passed to eval(),,,,
549,NPM,,OWASP-880-axios:0.16.2,,"Promise based HTTP client for the browser and node.js : Versions of `axios` prior to 0.18.1 are vulnerable to Denial of Service. If a request exceeds the `maxContentLength` property, the package prints an error but does not stop the request. This may cause high CPU usage and lead to Denial of Service.",,,,
469,RETIREJS,,OWASP-Prototype pollution-webservices.rest-omod-2.13.jar: handlebars-2.0.0.js,,Prototype pollution,,,,
446,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.4.0.jar: angular.js,,Prototype pollution,,,,
1090,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.1.jar: angular.js,,Prototype pollution,,,,
441,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.4.0.jar: angular-sanitize.min.js,,Prototype pollution,,,,
529,RETIREJS,,OWASP-Prototype pollution-openmrs-contrib-uicommons.bundle.min.js,,Prototype pollution,,,,
648,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.12.0.jar: angular.js,,Prototype pollution,,,,
696,RETIREJS,,OWASP-Prototype pollution-handlebars.min.js,,Prototype pollution,,,,
1095,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.1.jar: angular.min.js,,Prototype pollution,,,,
436,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.4.0.jar: angular-resource.min.js,,Prototype pollution,,,,
1085,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.1.jar: angular-sanitize.min.js,,Prototype pollution,,,,
402,RETIREJS,,OWASP-Prototype pollution-webservices.rest-omod-2.17.jar: handlebars-2.0.0.js,,Prototype pollution,,,,
643,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.12.0.jar: angular-sanitize.min.js,,Prototype pollution,,,,
1100,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.1.jar: handlebars.js,,Prototype pollution,,,,
433,RETIREJS,,OWASP-Prototype pollution-handlebars-1.3.1.jar: handlebars-v1.3.0.js,,Prototype pollution,,,,
693,RETIREJS,,OWASP-Prototype pollution-handlebars.js,,Prototype pollution,,,,
1103,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.1.jar: handlebars.min.js,,Prototype pollution,,,,
653,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.12.0.jar: angular.min.js,,Prototype pollution,,,,
491,RETIREJS,,OWASP-Prototype pollution-angular.min.js,,Prototype pollution,,,,
481,RETIREJS,,OWASP-Prototype pollution-angular-route.min.js,,Prototype pollution,,,,
658,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.12.0.jar: handlebars.js,,Prototype pollution,,,,
1080,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.1.jar: angular-resource.min.js,,Prototype pollution,,,,
1150,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-1.4.jar: handlebars.min.js,,Prototype pollution,,,,
378,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-1.4.jar: angular-resource.min.js,,Prototype pollution,,,,
585,RETIREJS,,OWASP-Prototype pollution-app.min.js,,Prototype pollution,,,,
383,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-1.4.jar: angular-sanitize.min.js,,Prototype pollution,,,,
661,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.12.0.jar: handlebars.min.js,,Prototype pollution,,,,
388,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-1.4.jar: angular.js,,Prototype pollution,,,,
486,RETIREJS,,OWASP-Prototype pollution-angular.js,,Prototype pollution,,,,
359,RETIREJS,,OWASP-Prototype pollution-handlebars-1.1.2.jar: handlebars-1.0.0.js,,Prototype pollution,,,,
451,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.4.0.jar: angular.min.js,,Prototype pollution,,,,
688,RETIREJS,,OWASP-Prototype pollution-angular-sanitize.min.js,,Prototype pollution,,,,
1129,RETIREJS,,OWASP-Prototype pollution-handlebars-2.0.0.js,,Prototype pollution,,,,
545,RETIREJS,,OWASP-Prototype pollution-app.js,,Prototype pollution,,,,
459,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.4.0.jar: handlebars.min.js,,Prototype pollution,,,,
638,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.12.0.jar: angular-resource.min.js,,Prototype pollution,,,,
1138,RETIREJS,,OWASP-Prototype pollution-angular-1.4.5.min.js,,Prototype pollution,,,,
393,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-1.4.jar: angular.min.js,,Prototype pollution,,,,
429,RETIREJS,,OWASP-Prototype pollution-handlebars-1.3.1.jar: handlebars-1.0.0.js,,Prototype pollution,,,,
476,RETIREJS,,OWASP-Prototype pollution-angular-resource.min.js,,Prototype pollution,,,,
398,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-1.4.jar: handlebars.js,,Prototype pollution,,,,
682,RETIREJS,,OWASP-Prototype pollution-metadatamapping-owa-1.3.4.jar: vendor.bundle.js,,Prototype pollution,,,,
456,RETIREJS,,OWASP-Prototype pollution-uicommons-omod-2.4.0.jar: handlebars.js,,Prototype pollution,,,,
622,OSSINDEX,,OWASP-Prototype override protection bypass-qs:0.4.2,,"querystring parser : A prototype override protection bypass is possible, which allows attackers to overwrite properties and functions. A previous solution for the problem is incomplete.",,,,
618,NPM,,OWASP-1469-qs:0.4.2,,"querystring parser : Affected version of `qs` are vulnerable to Prototype Pollution because it is possible to bypass the protection. The `qs.parse` function fails to properly prevent an object's prototype to be altered when parsing arbitrary input. Input containing `[` or `]` may bypass the prototype pollution protection and alter the Object prototype. This allows attackers to override properties that will exist in all objects, which may lead to Denial of Service or Remote Code Execution in specific circumstances.",,,,
620,OSSINDEX,,OWASP-CWE-20: Improper Input Validation-qs:0.4.2,,querystring parser : The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.,,,8.2,HIGH
621,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-qs:0.4.2,,"querystring parser : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
619,NPM,,OWASP-29-qs:0.4.2,,"querystring parser : Versions prior to 1.0 of `qs` are affected by a denial of service condition. This condition is triggered by parsing a crafted string that deserializes into very large sparse arrays, resulting in the process running out of memory and eventually crashing.",,,,
793,OSSINDEX,,OWASP-CWE-78: Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')-shell-quote:1.4.3,,"quote and parse shell commands : The software constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component.",,,8.4,HIGH
1151,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-uicommons-omod-1.4.jar: handlebars.min.js,,Quoteless attributes in templates can lead to XSS,,,,
399,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-uicommons-omod-1.4.jar: handlebars.js,,Quoteless attributes in templates can lead to XSS,,,,
430,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-handlebars-1.3.1.jar: handlebars-1.0.0.js,,Quoteless attributes in templates can lead to XSS,,,,
360,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-handlebars-1.1.2.jar: handlebars-1.0.0.js,,Quoteless attributes in templates can lead to XSS,,,,
1130,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-handlebars-2.0.0.js,,Quoteless attributes in templates can lead to XSS,,,,
460,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-uicommons-omod-2.4.0.jar: handlebars.min.js,,Quoteless attributes in templates can lead to XSS,,,,
662,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-uicommons-omod-2.12.0.jar: handlebars.min.js,,Quoteless attributes in templates can lead to XSS,,,,
659,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-uicommons-omod-2.12.0.jar: handlebars.js,,Quoteless attributes in templates can lead to XSS,,,,
1104,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-uicommons-omod-2.1.jar: handlebars.min.js,,Quoteless attributes in templates can lead to XSS,,,,
403,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-webservices.rest-omod-2.17.jar: handlebars-2.0.0.js,,Quoteless attributes in templates can lead to XSS,,,,
1101,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-uicommons-omod-2.1.jar: handlebars.js,,Quoteless attributes in templates can lead to XSS,,,,
434,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-handlebars-1.3.1.jar: handlebars-v1.3.0.js,,Quoteless attributes in templates can lead to XSS,,,,
694,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-handlebars.js,,Quoteless attributes in templates can lead to XSS,,,,
697,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-handlebars.min.js,,Quoteless attributes in templates can lead to XSS,,,,
470,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-webservices.rest-omod-2.13.jar: handlebars-2.0.0.js,,Quoteless attributes in templates can lead to XSS,,,,
457,RETIREJS,,OWASP-Quoteless attributes in templates can lead to XSS-uicommons-omod-2.4.0.jar: handlebars.js,,Quoteless attributes in templates can lead to XSS,,,,
700,RETIREJS,,OWASP-reDOS - regular expression denial of service-moment.js,,reDOS - regular expression denial of service,,,,
666,RETIREJS,,OWASP-reDOS - regular expression denial of service-uicommons-omod-2.12.0.jar: moment.min.js,,reDOS - regular expression denial of service,,,,
665,RETIREJS,,OWASP-reDOS - regular expression denial of service-uicommons-omod-2.12.0.jar: moment.js,,reDOS - regular expression denial of service,,,,
664,RETIREJS,,OWASP-reDOS - regular expression denial of service-uicommons-omod-2.12.0.jar: moment-with-locales.min.js,,reDOS - regular expression denial of service,,,,
462,RETIREJS,,OWASP-reDOS - regular expression denial of service-uicommons-omod-2.4.0.jar: moment-with-locales.min.js,,reDOS - regular expression denial of service,,,,
463,RETIREJS,,OWASP-reDOS - regular expression denial of service-uicommons-omod-2.4.0.jar: moment.js,,reDOS - regular expression denial of service,,,,
1108,RETIREJS,,OWASP-reDOS - regular expression denial of service-uicommons-omod-2.1.jar: moment.min.js,,reDOS - regular expression denial of service,,,,
1107,RETIREJS,,OWASP-reDOS - regular expression denial of service-uicommons-omod-2.1.jar: moment.js,,reDOS - regular expression denial of service,,,,
1106,RETIREJS,,OWASP-reDOS - regular expression denial of service-uicommons-omod-2.1.jar: moment-with-locales.min.js,,reDOS - regular expression denial of service,,,,
701,RETIREJS,,OWASP-reDOS - regular expression denial of service-moment.min.js,,reDOS - regular expression denial of service,,,,
464,RETIREJS,,OWASP-reDOS - regular expression denial of service-uicommons-omod-2.4.0.jar: moment.min.js,,reDOS - regular expression denial of service,,,,
699,RETIREJS,,OWASP-reDOS - regular expression denial of service-moment-with-locales.min.js,,reDOS - regular expression denial of service,,,,
800,NPM,,OWASP-1550-url-regex:3.2.0,,Regular expression for matching URLs : All versions of `url-regex` are vulnerable to a Regular Expression Denial of Service. An attacker providing a very long string in String.test can cause a Denial of Service.,,,,
1202,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-url-regex:3.2.0,,"Regular expression for matching URLs : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
570,NPM,,OWASP-1548-serialize-javascript:1.9.1,,"Serialize JavaScript to a superset of JSON that includes regular expressions and functions. : `serialize-javascript` prior to 3.1.0 allows remote attackers to inject arbitrary code via the function  deleteFunctions  within  index.js .    An object such as `{ foo : /1 /,  bar :  a @__R-<UID>-0__@ }` was serialized as `{ foo : /1 /,  bar :  a/1 /}`, which allows an attacker to escape the bar key. This requires the attacker to control the values of both foo and bar and guess the value of <UID>. The UID has a keyspace of approximately 4 billion making it a realistic network attack.      The following proof-of-concept calls console.log() when the running eval():   `eval('('+ serialize({ foo : /1  + console.log(1)/i,  bar : ' @__R-<UID>-0__@'}) + ')');`",,,,
1209,OSSINDEX,,OWASP-CWE-502: Deserialization of Untrusted Data-serialize-javascript:1.9.1,,Serialize JavaScript to a superset of JSON that includes regular expressions and functions. : The application deserializes untrusted data without sufficiently verifying that the resulting data will be valid.,,,9,CRITICAL
571,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-serialize-javascript:1.9.1,,Serialize JavaScript to a superset of JSON that includes regular expressions and functions. : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
569,NPM,,OWASP-1426-serialize-javascript:1.9.1,,Serialize JavaScript to a superset of JSON that includes regular expressions and functions. : Versions of `serialize-javascript` prior to 2.1.1 are vulnerable to Cross-Site Scripting (XSS). The package fails to sanitize serialized regular expressions. This vulnerability does not affect Node.js applications.,,,,
575,NPM,,OWASP-550-ws:6.1.4,,"Simple to use, blazing fast and thoroughly tested websocket client and server for Node.js : Affected versions of `ws` can crash when a specially crafted `Sec-WebSocket-Extensions` header containing `Object.prototype` property names as extension or parameter names is sent.  ## Proof of concept  ``` const WebSocket = require('ws'); const net = require('net');  const wss = new WebSocket.Server({ port: 3000 }, function () {   const payload = 'constructor';  // or ',;constructor'    const request = [     'GET / HTTP/1.1',     'Connection: Upgrade',     'Sec-WebSocket-Key: test',     'Sec-WebSocket-Version: 8',     `Sec-WebSocket-Extensions: ${payload}`,     'Upgrade: websocket',     'rn'   ].join('rn');    const socket = net.connect(3000, function () {     socket.resume();     socket.write(request);   }); }); ```",,,,
542,OSSINDEX,,OWASP-CWE-331: Insufficient Entropy-ws:1.1.5,,"Simple to use, blazing fast and thoroughly tested websocket client and server for Node.js : The software uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.",,,6.5,MEDIUM
802,NPM,,OWASP-550-ws:1.1.2,,"simple to use, blazing fast and thoroughly tested websocket client, server and console for node.js, up-to-date against RFC-6455 : Affected versions of `ws` can crash when a specially crafted `Sec-WebSocket-Extensions` header containing `Object.prototype` property names as extension or parameter names is sent.  ## Proof of concept  ``` const WebSocket = require('ws'); const net = require('net');  const wss = new WebSocket.Server({ port: 3000 }, function () {   const payload = 'constructor';  // or ',;constructor'    const request = [     'GET / HTTP/1.1',     'Connection: Upgrade',     'Sec-WebSocket-Key: test',     'Sec-WebSocket-Version: 8',     `Sec-WebSocket-Extensions: ${payload}`,     'Upgrade: websocket',     'rn'   ].join('rn');    const socket = net.connect(3000, function () {     socket.resume();     socket.write(request);   }); }); ```",,,,
624,NPM,,OWASP-550-ws:0.8.0,,"simple to use, blazing fast and thoroughly tested websocket client, server and console for node.js, up-to-date against RFC-6455 : Affected versions of `ws` can crash when a specially crafted `Sec-WebSocket-Extensions` header containing `Object.prototype` property names as extension or parameter names is sent.  ## Proof of concept  ``` const WebSocket = require('ws'); const net = require('net');  const wss = new WebSocket.Server({ port: 3000 }, function () {   const payload = 'constructor';  // or ',;constructor'    const request = [     'GET / HTTP/1.1',     'Connection: Upgrade',     'Sec-WebSocket-Key: test',     'Sec-WebSocket-Version: 8',     `Sec-WebSocket-Extensions: ${payload}`,     'Upgrade: websocket',     'rn'   ].join('rn');    const socket = net.connect(3000, function () {     socket.resume();     socket.write(request);   }); }); ```",,,,
623,NPM,,OWASP-120-ws:0.8.0,,"simple to use, blazing fast and thoroughly tested websocket client, server and console for node.js, up-to-date against RFC-6455 : Affected versions of `ws` do not appropriately limit the size of incoming websocket payloads, which may result in a denial of service condition when the node process crashes after receiving a large payload.",,,,
626,OSSINDEX,,OWASP-CWE-201: Information Exposure Through Sent Data-ws:0.8.0,,"simple to use, blazing fast and thoroughly tested websocket client, server and console for node.js, up-to-date against RFC-6455 : The accidental exposure of sensitive information through sent data refers to the transmission of data which are either sensitive in and of itself or useful in the further exploitation of the system through standard data channels.",,,6.5,MEDIUM
627,OSSINDEX,,OWASP-CWE-20: Improper Input Validation-ws:0.8.0,,"simple to use, blazing fast and thoroughly tested websocket client, server and console for node.js, up-to-date against RFC-6455 : The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.",,,7.5,HIGH
573,OSSINDEX,,OWASP-CWE-20: Improper Input Validation-ws:1.1.2,,"simple to use, blazing fast and thoroughly tested websocket client, server and console for node.js, up-to-date against RFC-6455 : The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.",,,7.5,HIGH
629,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-ws:0.8.0,,"simple to use, blazing fast and thoroughly tested websocket client, server and console for node.js, up-to-date against RFC-6455 : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
574,OSSINDEX,,OWASP-CWE-331: Insufficient Entropy-ws:1.1.2,,"simple to use, blazing fast and thoroughly tested websocket client, server and console for node.js, up-to-date against RFC-6455 : The software uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.",,,6.5,MEDIUM
628,OSSINDEX,,OWASP-CWE-331: Insufficient Entropy-ws:0.8.0,,"simple to use, blazing fast and thoroughly tested websocket client, server and console for node.js, up-to-date against RFC-6455 : The software uses an algorithm or scheme that produces insufficient entropy, leaving patterns or clusters of values that are more likely to occur than others.",,,6.5,MEDIUM
625,NPM,,OWASP-67-ws:0.8.0,,"simple to use, blazing fast and thoroughly tested websocket client, server and console for node.js, up-to-date against RFC-6455 : Versions of `ws` prior to 1.0.1 are affected by a remote memory disclosure vulnerability.  In certain rare circumstances, applications which allow users to control the arguments of a `client.ping()` call will cause `ws` to send the contents of an allocated but non-zero-filled buffer to the server. This may disclose sensitive information that still exists in memory after previous use of the memory for other tasks.    ## Proof of Concept ``` var ws = require('ws')  var server = new ws.Server({ port: 9000 }) var client = new ws('ws://localhost:9000')  client.on('open', function () {   console.log('open')   client.ping(50) // this sends a non-zeroed buffer of 50 bytes    client.on('pong', function (data) {     console.log('got pong')     console.log(data) // Data from the client.    }) }) ```",,,,
780,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-mocha:2.5.3,,"simple, flexible, fun test framework : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
789,OSSINDEX,,OWASP-Remote memory disclosure-request:2.51.0,,"Simplified HTTP request client. : > If the node process makes a request with a multipart attachment, and the type of the body option is a Number, then that many bytes of uninitialized memory will be sent in the body of the request.  >  > -- [github.com](https://github.com/request/request/pull/2018)",,,,
604,NPM,,OWASP-8-express:2.5.11,,"Sinatra inspired web development framework : Vulnerable versions of express do not specify a charset field in the content-type header while displaying 400 level response messages. The lack of enforcing user's browser to set correct charset, could be leveraged by an attacker to perform a cross-site scripting attack, using non-standard encodings, like UTF-7.",,,,
596,NPM,,OWASP-534-debug:0.7.4,,"small debugging utility : Affected versions of `debug` are vulnerable to regular expression denial of service when untrusted user input is passed into the `o` formatter.   As it takes 50,000 characters to block the event loop for 2 seconds, this issue is a low severity issue.",,,,
556,NPM,,OWASP-534-debug:2.6.9,,"small debugging utility : Affected versions of `debug` are vulnerable to regular expression denial of service when untrusted user input is passed into the `o` formatter.   As it takes 50,000 characters to block the event loop for 2 seconds, this issue is a low severity issue.",,,,
504,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-debug:2.2.0,,"small debugging utility : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
505,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-debug:2.3.3,,"small debugging utility : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
601,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-debug:2.1.0,,"small debugging utility : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
600,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-debug:1.0.4,,"small debugging utility : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
599,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-debug:1.0.3,,"small debugging utility : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
598,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-debug:1.0.2,,"small debugging utility : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
597,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-debug:0.7.4,,"small debugging utility : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
796,OSSINDEX,,OWASP-Symlink Arbitrary File Overwrite-tar:1.0.3,,tar for node : Symbolic links in a tar file could point outside the extraction root. This allowed the overwriting of targets outside the expected paths for a package.,,,7.5,HIGH
794,NPM,,OWASP-57-tar:1.0.3,,tar for node : Versions of `tar` prior to 2.0.0 are affected by an arbitrary file write vulnerability. The vulnerability occurs because `tar` does not verify that extracted symbolic links to not resolve to targets outside of the extraction root directory.,,,,
795,NPM,,OWASP-803-tar:1.0.3,,"tar for node : Versions of `tar` prior to 4.4.2 for 4.x and 2.2.2 for 2.x are vulnerable to Arbitrary File Overwrite. Extracting tarballs containing a hardlink to a file that already exists in the system, and a file that matches the hardlink will overwrite the system's file with the contents of the extracted file.",,,,
467,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.10.2.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
675,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.10.6.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
471,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.11.3.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
472,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.12.0.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
826,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.11.6.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
704,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.10.4.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
364,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.10.5.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
365,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.11.4.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
1111,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.9.7.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
1132,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.11.0.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
680,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.11.5.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
679,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.9.4.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
677,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.10.0.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
828,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.9.10.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
427,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.9.9.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
669,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-api-1.9.1.jar,,The api that is re-used across web and modules : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
466,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-openmrs-api-1.10.2.jar,,"The api that is re-used across web and modules : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
703,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-openmrs-api-1.10.4.jar,,"The api that is re-used across web and modules : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
1110,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-openmrs-api-1.9.7.jar,,"The api that is re-used across web and modules : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
363,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-openmrs-api-1.10.5.jar,,"The api that is re-used across web and modules : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
668,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-openmrs-api-1.9.1.jar,,"The api that is re-used across web and modules : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
426,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-openmrs-api-1.9.9.jar,,"The api that is re-used across web and modules : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
674,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-openmrs-api-1.10.6.jar,,"The api that is re-used across web and modules : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
676,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-openmrs-api-1.10.0.jar,,"The api that is re-used across web and modules : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
678,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-openmrs-api-1.9.4.jar,,"The api that is re-used across web and modules : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
827,OSSINDEX,,OWASP-CWE-611: Improper Restriction of XML External Entity Reference ('XXE')-openmrs-api-1.9.10.jar,,"The api that is re-used across web and modules : The software processes an XML document that can contain XML entities with URIs that resolve to documents outside of the intended sphere of control, causing the product to embed incorrect documents into its output.",,,5.4,MEDIUM
546,RETIREJS,,OWASP-The attribute usemap can be used as a security exploit-app.js,,The attribute usemap can be used as a security exploit,,,,
379,RETIREJS,,OWASP-The attribute usemap can be used as a security exploit-uicommons-omod-1.4.jar: angular-resource.min.js,,The attribute usemap can be used as a security exploit,,,,
586,RETIREJS,,OWASP-The attribute usemap can be used as a security exploit-app.min.js,,The attribute usemap can be used as a security exploit,,,,
384,RETIREJS,,OWASP-The attribute usemap can be used as a security exploit-uicommons-omod-1.4.jar: angular-sanitize.min.js,,The attribute usemap can be used as a security exploit,,,,
579,RETIREJS,,OWASP-The attribute usemap can be used as a security exploit-angular.js,,The attribute usemap can be used as a security exploit,,,,
389,RETIREJS,,OWASP-The attribute usemap can be used as a security exploit-uicommons-omod-1.4.jar: angular.js,,The attribute usemap can be used as a security exploit,,,,
394,RETIREJS,,OWASP-The attribute usemap can be used as a security exploit-uicommons-omod-1.4.jar: angular.min.js,,The attribute usemap can be used as a security exploit,,,,
1139,RETIREJS,,OWASP-The attribute usemap can be used as a security exploit-angular-1.4.5.min.js,,The attribute usemap can be used as a security exploit,,,,
356,OSSINDEX,,OWASP-Arbitrary file upload via deserialization-commons-fileupload-1.2.1.jar,,"The FileUpload component provides a simple yet flexible means of adding support for multipart     file upload functionality to servlets and web applications. : > The DiskFileItem class in Apache Commons FileUpload, as used in Red Hat JBoss BRMS 5.3.1; JBoss Portal 4.3 CP07, 5.2.2, and 6.0.0; and Red Hat JBoss Web Server 1.0.2 allows remote attackers to write to arbitrary files via a NULL byte in a file name in a serialized instance. >  > -- [redhat.com](https://access.redhat.com/security/cve/CVE-2013-2186)",,,,
576,NPM,,OWASP-1500-yargs-parser:13.1.2,,"the mighty option parser used by yargs : Affected versions of `yargs-parser` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.   Parsing the argument `--foo.__proto__.bar baz'` adds a `bar` property with value `baz` to all objects. This is only exploitable if attackers have control over the arguments being passed to `yargs-parser`.",,,,
630,NPM,,OWASP-1500-yargs-parser:4.2.1,,"the mighty option parser used by yargs : Affected versions of `yargs-parser` are vulnerable to prototype pollution. Arguments are not properly sanitized, allowing an attacker to modify the prototype of `Object`, causing the addition or modification of an existing property that will exist on all objects.   Parsing the argument `--foo.__proto__.bar baz'` adds a `bar` property with value `baz` to all objects. This is only exploitable if attackers have control over the arguments being passed to `yargs-parser`.",,,,
577,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-yargs-parser:2.4.1,,"the mighty option parser used by yargs : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
631,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-yargs-parser:4.2.1,,"the mighty option parser used by yargs : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
520,OSSINDEX,,OWASP-CWE-506: Embedded Malicious Code-lodash:3.10.1,,The modern build of lodash modular utilities. : The application contains code that appears to be malicious in nature.,,,9.6,CRITICAL
521,OSSINDEX,,OWASP-CWE-770: Allocation of Resources Without Limits or Throttling-lodash:3.10.1,,"The modern build of lodash modular utilities. : The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy for that actor.",,,7.4,HIGH
609,NPM,,OWASP-1065-lodash:3.10.1,,The modern build of lodash modular utilities. : Versions of `lodash` before 4.17.12 are vulnerable to Prototype Pollution.  The function `defaultsDeep` allows a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.,,,,
611,NPM,,OWASP-577-lodash:3.10.1,,"The modern build of lodash modular utilities. : Versions of `lodash` before 4.17.5 are vulnerable to prototype pollution.   The vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `__proto__` causing the addition or modification of an existing property that will exist on all objects.",,,,
612,NPM,,OWASP-782-lodash:3.10.1,,"The modern build of lodash modular utilities. : Versions of `lodash` before 4.17.5 are vulnerable to prototype pollution.   The vulnerable functions are 'defaultsDeep', 'merge', and 'mergeWith' which allow a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.",,,,
610,NPM,,OWASP-1523-lodash:3.10.1,,The modern build of lodash modular utilities. : Versions of `lodash` prior to 4.17.19 are vulnerable to Prototype Pollution.  The function `zipObjectDeep` allows a malicious user to modify the prototype of `Object` if the property identifiers are user-supplied. Being affected by this issue requires zipping objects based on user-provided property arrays.    This vulnerability causes the addition or modification of an existing property that will exist on all objects and may lead to Denial of Service or Code Execution under specific circumstances.,,,,
607,OSSINDEX,,OWASP-CWE-506: Embedded Malicious Code-lodash.merge:3.3.2,,The modern build of lodash’s `_.merge` as a module. : The application contains code that appears to be malicious in nature.,,,9.6,CRITICAL
608,OSSINDEX,,OWASP-CWE-74: Improper Neutralization of Special Elements in Output Used by a Downstream Component ('Injection')-lodash.merge:3.3.2,,"The modern build of lodash’s `_.merge` as a module. : The software constructs all or part of a command, data structure, or record using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify how it is parsed or interpreted when it is sent to a downstream component.",,,5.3,MEDIUM
606,NPM,,OWASP-1067-lodash.merge:3.3.2,,The modern build of lodash’s `_.merge` as a module. : Versions of `lodash.merge` before 4.6.1 are vulnerable to Prototype Pollution. The function 'merge' may allow a malicious user to modify the prototype of `Object` via `__proto__` causing the addition or modification of an existing property that will exist on all objects.,,,,
605,NPM,,OWASP-1066-lodash.merge:3.3.2,,The modern build of lodash’s `_.merge` as a module. : Versions of `lodash.merge` before 4.6.2 are vulnerable to prototype pollution. The function `merge` may allow a malicious user to modify the prototype of `Object` via `{constructor: {prototype: {...}}}` causing the addition or modification of an existing property that will exist on all objects.,,,,
1124,OSSINDEX,,OWASP-POODLE vulnerability in SSLv3.0 support-netty-3.5.2.Final.jar,,"The Netty project is an effort to provide an asynchronous event-driven     network application framework and tools for rapid development of     maintainable high performance and high scalability protocol servers and     clients.  In other words, Netty is a NIO client server framework which     enables quick and easy development of network applications such as protocol     servers and clients. It greatly simplifies and streamlines network     programming such as TCP and UDP socket server. : The SSLv3 support is vulnerable to a POODLE attack. SSLv3 should be disabled pending implementation of TLS_FALLBACK_SCSV by Oracle.",,,,
720,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-canvas:1.1.6,,"The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
474,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-web-1.11.6.jar,,The web layer of open mrs : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
473,OSSINDEX,,OWASP-CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')-openmrs-web-1.11.5.jar,,The web layer of open mrs : The software does not neutralize or incorrectly neutralizes user-controllable input before it is placed in output that is used as a web page that is served to other users.,,,6.1,MEDIUM
616,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-ms:0.6.2,,"Tiny ms conversion utility : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,5.3,MEDIUM
615,NPM,,OWASP-46-ms:0.6.2,,"Tiny ms conversion utility : Versions of `ms` prior to 0.7.1 are affected by a regular expression denial of service vulnerability when extremely long version strings are parsed.  ## Proof of Concept ```javascript var ms = require('ms'); var genstr = function (len, chr) {    var result =   ;    for (i=0; i<=len; i++) {        result = result + chr;    }     return result; }  ms(genstr(process.argv[2],  5 ) +   minutea );  ```  ### Results Showing increase in execution time based on the input string. ``` $ time node ms.js 10000  real	0m0.758s user	0m0.724s sys	0m0.031s  $ time node ms.js 20000  real	0m2.580s user	0m2.494s sys	0m0.047s  $ time node ms.js 30000  real	0m5.747s user	0m5.483s sys	0m0.080s  $ time node ms.js 80000  real	0m41.022s user	0m38.894s sys	0m0.529s ```",,,,
1115,OSSINDEX,,OWASP-Remote code execution-commons-collections-3.2.1.jar,,"Types that extend and augment the Java Collections Framework. : > It was found that a flaw in commons-collection library allowed remote code execution wherever deserialization occurs. While JBoss doesnt expose the JMXInvokerServlet by default, other interfaces where deserialization occur might be vulnerable. >  > -- [redhat.com](https://bugzilla.redhat.com/show_bug.cgi?id=1279330)",,,,
355,OSSINDEX,,OWASP-Remote code execution-commons-collections-3.2.jar,,"Types that extend and augment the Java Collections Framework. : > It was found that a flaw in commons-collection library allowed remote code execution wherever deserialization occurs. While JBoss doesnt expose the JMXInvokerServlet by default, other interfaces where deserialization occur might be vulnerable. >  > -- [redhat.com](https://bugzilla.redhat.com/show_bug.cgi?id=1279330)",,,,
1140,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-angular-1.4.5.min.js,,Universal CSP bypass via add-on in Firefox,,,,
683,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-metadatamapping-owa-1.3.4.jar: vendor.bundle.js,,Universal CSP bypass via add-on in Firefox,,,,
587,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-app.min.js,,Universal CSP bypass via add-on in Firefox,,,,
380,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-1.4.jar: angular-resource.min.js,,Universal CSP bypass via add-on in Firefox,,,,
492,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-angular.min.js,,Universal CSP bypass via add-on in Firefox,,,,
487,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-angular.js,,Universal CSP bypass via add-on in Firefox,,,,
689,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-angular-sanitize.min.js,,Universal CSP bypass via add-on in Firefox,,,,
1081,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-2.1.jar: angular-resource.min.js,,Universal CSP bypass via add-on in Firefox,,,,
477,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-angular-resource.min.js,,Universal CSP bypass via add-on in Firefox,,,,
482,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-angular-route.min.js,,Universal CSP bypass via add-on in Firefox,,,,
1086,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-2.1.jar: angular-sanitize.min.js,,Universal CSP bypass via add-on in Firefox,,,,
385,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-1.4.jar: angular-sanitize.min.js,,Universal CSP bypass via add-on in Firefox,,,,
390,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-1.4.jar: angular.js,,Universal CSP bypass via add-on in Firefox,,,,
395,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-1.4.jar: angular.min.js,,Universal CSP bypass via add-on in Firefox,,,,
437,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-2.4.0.jar: angular-resource.min.js,,Universal CSP bypass via add-on in Firefox,,,,
442,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-2.4.0.jar: angular-sanitize.min.js,,Universal CSP bypass via add-on in Firefox,,,,
447,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-2.4.0.jar: angular.js,,Universal CSP bypass via add-on in Firefox,,,,
547,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-app.js,,Universal CSP bypass via add-on in Firefox,,,,
452,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-2.4.0.jar: angular.min.js,,Universal CSP bypass via add-on in Firefox,,,,
639,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-2.12.0.jar: angular-resource.min.js,,Universal CSP bypass via add-on in Firefox,,,,
1096,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-2.1.jar: angular.min.js,,Universal CSP bypass via add-on in Firefox,,,,
644,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-2.12.0.jar: angular-sanitize.min.js,,Universal CSP bypass via add-on in Firefox,,,,
530,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-openmrs-contrib-uicommons.bundle.min.js,,Universal CSP bypass via add-on in Firefox,,,,
1091,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-2.1.jar: angular.js,,Universal CSP bypass via add-on in Firefox,,,,
654,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-2.12.0.jar: angular.min.js,,Universal CSP bypass via add-on in Firefox,,,,
649,RETIREJS,,OWASP-Universal CSP bypass via add-on in Firefox-uicommons-omod-2.12.0.jar: angular.js,,Universal CSP bypass via add-on in Firefox,,,,
719,NPM,,OWASP-804-canvas:1.1.6,,Versions of `canvas` prior to 1.6.10 are vulnerable to Denial of Service. Processing malicious JPEGs or GIFs could crash the node process.,,,,
1167,NPM,,OWASP-28-qs:0.4.2,,Versions prior to 1.0.0 of `qs` are affected by a denial of service vulnerability that results from excessive recursion in parsing a deeply nested JSON string.,,,,
783,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-node-sass:2.1.1,,"Wrapper around libsass : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
782,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-node-sass:2.0.1,,"Wrapper around libsass : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
722,OSSINDEX,,OWASP-CWE-200: Information Exposure-concat-stream:1.2.1,,writable stream that concatenates strings or binary data and calls a callback with the result : An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information.,,,,
724,OSSINDEX,,OWASP-CWE-200: Information Exposure-concat-stream:1.5.1,,writable stream that concatenates strings or binary data and calls a callback with the result : An information exposure is the intentional or unintentional disclosure of information to an actor that is not explicitly authorized to have access to that information.,,,,
723,OSSINDEX,,OWASP-Possible Denial of Service (DoS)-concat-stream:1.2.1,,"writable stream that concatenates strings or binary data and calls a callback with the result : Putting the word  Array  in a utf8 buffer causes the program to crash, which could affect programs who use this package to process requests.",,,,
725,OSSINDEX,,OWASP-CWE-20: Improper Input Validation-concat-stream:1.5.1,,writable stream that concatenates strings or binary data and calls a callback with the result : The product does not validate or incorrectly validates input that can affect the control flow or data flow of a program.,,,8.2,HIGH
726,NPM,,OWASP-597-concat-stream:1.6.2,,writable stream that concatenates strings or binary data and calls a callback with the result : Versions of `concat-stream` before 1.5.2 are vulnerable to memory exposure if userp provided input is passed into `write()`  Versions <1.3.0 are not affected due to not using unguarded Buffer constructor.,,,,
493,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-angular.min.js,,XSS in $sanitize in Safari/Firefox,,,,
381,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-1.4.jar: angular-resource.min.js,,XSS in $sanitize in Safari/Firefox,,,,
488,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-angular.js,,XSS in $sanitize in Safari/Firefox,,,,
386,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-1.4.jar: angular-sanitize.min.js,,XSS in $sanitize in Safari/Firefox,,,,
391,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-1.4.jar: angular.js,,XSS in $sanitize in Safari/Firefox,,,,
690,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-angular-sanitize.min.js,,XSS in $sanitize in Safari/Firefox,,,,
396,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-1.4.jar: angular.min.js,,XSS in $sanitize in Safari/Firefox,,,,
478,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-angular-resource.min.js,,XSS in $sanitize in Safari/Firefox,,,,
1082,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-2.1.jar: angular-resource.min.js,,XSS in $sanitize in Safari/Firefox,,,,
684,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-metadatamapping-owa-1.3.4.jar: vendor.bundle.js,,XSS in $sanitize in Safari/Firefox,,,,
588,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-app.min.js,,XSS in $sanitize in Safari/Firefox,,,,
438,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-2.4.0.jar: angular-resource.min.js,,XSS in $sanitize in Safari/Firefox,,,,
1141,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-angular-1.4.5.min.js,,XSS in $sanitize in Safari/Firefox,,,,
483,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-angular-route.min.js,,XSS in $sanitize in Safari/Firefox,,,,
443,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-2.4.0.jar: angular-sanitize.min.js,,XSS in $sanitize in Safari/Firefox,,,,
655,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-2.12.0.jar: angular.min.js,,XSS in $sanitize in Safari/Firefox,,,,
1087,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-2.1.jar: angular-sanitize.min.js,,XSS in $sanitize in Safari/Firefox,,,,
448,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-2.4.0.jar: angular.js,,XSS in $sanitize in Safari/Firefox,,,,
650,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-2.12.0.jar: angular.js,,XSS in $sanitize in Safari/Firefox,,,,
548,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-app.js,,XSS in $sanitize in Safari/Firefox,,,,
1092,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-2.1.jar: angular.js,,XSS in $sanitize in Safari/Firefox,,,,
531,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-openmrs-contrib-uicommons.bundle.min.js,,XSS in $sanitize in Safari/Firefox,,,,
453,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-2.4.0.jar: angular.min.js,,XSS in $sanitize in Safari/Firefox,,,,
645,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-2.12.0.jar: angular-sanitize.min.js,,XSS in $sanitize in Safari/Firefox,,,,
1097,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-2.1.jar: angular.min.js,,XSS in $sanitize in Safari/Firefox,,,,
640,RETIREJS,,OWASP-XSS in $sanitize in Safari/Firefox-uicommons-omod-2.12.0.jar: angular-resource.min.js,,XSS in $sanitize in Safari/Firefox,,,,
698,RETIREJS,,OWASP-XSS injection point in attr name binding for browser IE7 and older-knockout-2.2.1.js,,XSS injection point in attr name binding for browser IE7 and older,,,,
400,RETIREJS,,OWASP-XSS injection point in attr name binding for browser IE7 and older-uicommons-omod-1.4.jar: knockout-2.1.0.js,,XSS injection point in attr name binding for browser IE7 and older,,,,
663,RETIREJS,,OWASP-XSS injection point in attr name binding for browser IE7 and older-uicommons-omod-2.12.0.jar: knockout-2.2.1.js,,XSS injection point in attr name binding for browser IE7 and older,,,,
1105,RETIREJS,,OWASP-XSS injection point in attr name binding for browser IE7 and older-uicommons-omod-2.1.jar: knockout-2.1.0.js,,XSS injection point in attr name binding for browser IE7 and older,,,,
461,RETIREJS,,OWASP-XSS injection point in attr name binding for browser IE7 and older-uicommons-omod-2.4.0.jar: knockout-2.2.1.js,,XSS injection point in attr name binding for browser IE7 and older,,,,
641,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-uicommons-omod-2.12.0.jar: angular-resource.min.js,,XSS through SVG if enableSvg is set,,,,
1093,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-uicommons-omod-2.1.jar: angular.js,,XSS through SVG if enableSvg is set,,,,
454,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-uicommons-omod-2.4.0.jar: angular.min.js,,XSS through SVG if enableSvg is set,,,,
646,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-uicommons-omod-2.12.0.jar: angular-sanitize.min.js,,XSS through SVG if enableSvg is set,,,,
1098,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-uicommons-omod-2.1.jar: angular.min.js,,XSS through SVG if enableSvg is set,,,,
532,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-openmrs-contrib-uicommons.bundle.min.js,,XSS through SVG if enableSvg is set,,,,
1088,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-uicommons-omod-2.1.jar: angular-sanitize.min.js,,XSS through SVG if enableSvg is set,,,,
449,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-uicommons-omod-2.4.0.jar: angular.js,,XSS through SVG if enableSvg is set,,,,
651,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-uicommons-omod-2.12.0.jar: angular.js,,XSS through SVG if enableSvg is set,,,,
444,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-uicommons-omod-2.4.0.jar: angular-sanitize.min.js,,XSS through SVG if enableSvg is set,,,,
484,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-angular-route.min.js,,XSS through SVG if enableSvg is set,,,,
1083,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-uicommons-omod-2.1.jar: angular-resource.min.js,,XSS through SVG if enableSvg is set,,,,
439,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-uicommons-omod-2.4.0.jar: angular-resource.min.js,,XSS through SVG if enableSvg is set,,,,
656,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-uicommons-omod-2.12.0.jar: angular.min.js,,XSS through SVG if enableSvg is set,,,,
685,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-metadatamapping-owa-1.3.4.jar: vendor.bundle.js,,XSS through SVG if enableSvg is set,,,,
479,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-angular-resource.min.js,,XSS through SVG if enableSvg is set,,,,
691,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-angular-sanitize.min.js,,XSS through SVG if enableSvg is set,,,,
494,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-angular.min.js,,XSS through SVG if enableSvg is set,,,,
489,RETIREJS,,OWASP-XSS through SVG if enableSvg is set-angular.js,,XSS through SVG if enableSvg is set,,,,
766,OSSINDEX,,OWASP-CWE-94: Improper Control of Generation of Code ('Code Injection')-js-yaml:3.6.1,,"YAML 1.2 parser and serializer : The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",,,8.8,HIGH
562,OSSINDEX,,OWASP-CWE-94: Improper Control of Generation of Code ('Code Injection')-js-yaml:3.7.0,,"YAML 1.2 parser and serializer : The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",,,8.8,HIGH
764,OSSINDEX,,OWASP-CWE-94: Improper Control of Generation of Code ('Code Injection')-js-yaml:3.5.5,,"YAML 1.2 parser and serializer : The software constructs all or part of a code segment using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the syntax or behavior of the intended code segment.",,,8.8,HIGH
561,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-js-yaml:3.7.0,,"YAML 1.2 parser and serializer : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
763,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-js-yaml:3.5.5,,"YAML 1.2 parser and serializer : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
765,OSSINDEX,,OWASP-CWE-400: Uncontrolled Resource Consumption ('Resource Exhaustion')-js-yaml:3.6.1,,"YAML 1.2 parser and serializer : The software does not properly restrict the size or amount of resources that are requested or influenced by an actor, which can be used to consume more resources than intended.",,,7.5,HIGH
559,NPM,,OWASP-788-js-yaml:3.7.0,,"YAML 1.2 parser and serializer : Versions of `js-yaml` prior to 3.13.0 are vulnerable to Denial of Service. By parsing a carefully-crafted YAML file, the node process stalls and may exhaust system resources leading to a Denial of Service.",,,,
560,NPM,,OWASP-813-js-yaml:3.7.0,,"YAML 1.2 parser and serializer : Versions of `js-yaml` prior to 3.13.1 are vulnerable to Code Injection. The `load()` function may execute arbitrary code injected through a malicious YAML file. Objects that have `toString` as key, JavaScript code as value and are used as explicit mapping keys allow attackers to execute the supplied code through the `load()` function. The `safeLoad()` function is unaffected.  An example payload is  `{ toString: !<tag:yaml.org,2002:js/function> 'function (){return Date.now()}' } : 1`  which returns the object  {    1553107949161 : 1 }",,,,
